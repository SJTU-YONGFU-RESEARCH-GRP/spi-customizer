name: SPI Customizer Automation

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:

jobs:
  spi-customization:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Icarus Verilog and Cocotb
      run: |
        sudo apt-get update
        sudo apt-get install -y iverilog
        pip install cocotb pytest matplotlib

    - name: Install GTKWave for waveform generation
      run: |
        sudo apt-get install -y gtkwave

    - name: Process SPI Issue
      run: |
        python3 scripts/process_issue.py ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}

    - name: Send Email Results
      if: github.event.issue.number != null
      run: |
        python3 scripts/email_sender.py
      env:
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
      continue-on-error: true  # Don't fail if email fails

    - name: Upload Results
      uses: actions/upload-artifact@v4
      if: github.event.issue.number != null
      with:
        name: spi-results-${{ github.event.issue.number }}
        path: |
          results/issue-${{ github.event.issue.number }}/
          plots/

    - name: Commit and Push Results
      if: success() && github.event.issue.number != null
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Check if there are changes to commit
        if [ -d "results/issue-${{ github.event.issue.number }}" ]; then
          echo "üìÅ Found results for issue #${{ github.event.issue.number }}"

          # Add results to git
          git add results/issue-${{ github.event.issue.number }}/

          # Add any new plot files
          if [ -d "plots" ]; then
            git add plots/ || echo "‚ö†Ô∏è  No plot files to add"
          fi

          # Check if there are any changes to commit
          if ! git diff --staged --quiet; then
            echo "üìù Committing results..."
            git commit -m "ü§ñ Auto-generated results for issue #${{ github.event.issue.number }}

            - Generated custom SPI core
            - Created testbench files
            - Added simulation results
            - Included timing diagrams

            Triggered by: ${{ github.event.issue.title }}"

            # Push changes
            git push origin main || git push origin master || echo "‚ö†Ô∏è  Push failed - may not have permissions"
            echo "‚úÖ Results committed and pushed successfully!"
          else
            echo "‚ÑπÔ∏è  No changes to commit"
          fi
        else
          echo "‚ö†Ô∏è  No results folder found for issue #${{ github.event.issue.number }}"
        fi
